/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { NotificationConfig } from '../notificationConfig';
import { Ng6NotifyPopupComponent } from '../ng6-notify-popup.component';
import { ComponentInjectService } from './component-inject.service';
import * as i0 from "@angular/core";
import * as i1 from "./component-inject.service";
var Ng6NotifyPopupService = /** @class */ (function () {
    function Ng6NotifyPopupService(compInject) {
        this.compInject = compInject;
        this.defaultConfigVar = new NotificationConfig('bottom', 3000, 'error', 'body', false, '');
    }
    /**
     * @param {?} configObject
     * @return {?}
     */
    Ng6NotifyPopupService.prototype.defaultConfig = /**
     * @param {?} configObject
     * @return {?}
     */
    function (configObject) {
        this.setConfig(configObject, this.defaultConfigVar);
    };
    /**
     * @return {?}
     */
    Ng6NotifyPopupService.prototype.destroy = /**
     * @return {?}
     */
    function () {
        clearTimeout(this.cleartime);
        clearTimeout(this.clearhide);
        if (this.activeNotificationCompRef) {
            this.compInject.destroyComponent(this.activeNotificationCompRef);
            this.activeNotificationCompRef = null;
        }
    };
    /**
     * @param {?} notificationText
     * @param {?=} notificationConfig
     * @return {?}
     */
    Ng6NotifyPopupService.prototype.show = /**
     * @param {?} notificationText
     * @param {?=} notificationConfig
     * @return {?}
     */
    function (notificationText, notificationConfig) {
        var _this = this;
        this.destroy();
        /** @type {?} */
        var config = new NotificationConfig(this.defaultConfigVar.position, this.defaultConfigVar.duration, this.defaultConfigVar.type, this.defaultConfigVar.location, this.defaultConfigVar.sticky, notificationText);
        if (notificationConfig != undefined && notificationConfig != null)
            this.setConfig(notificationConfig, config);
        if (config.location == 'body')
            this.activeNotificationCompRef = this.compInject.appendComponentToBody(Ng6NotifyPopupComponent, config, document.querySelector('body'));
        else
            this.activeNotificationCompRef = this.compInject.appendComponent(Ng6NotifyPopupComponent, config, document.querySelector(config.location));
        this.activeNotificationCompRef.instance.fade = 'show';
        if (!this.activeNotificationCompRef.instance.sticky) {
            this.cleartime = window.setTimeout(function () {
                _this.activeNotificationCompRef.instance.fade = 'hide';
                _this.clearhide = window.setTimeout(function () {
                    _this.destroy();
                }, 700);
            }, config.duration);
        }
        else
            this.activeNotificationCompRef.instance.destroyComponent.subscribe(function (value) {
                _this.activeNotificationCompRef.instance.fade = 'hide';
                _this.clearhide = window.setTimeout(function () {
                    _this.destroy();
                }, 700);
            });
    };
    /**
     * @param {?} configObject
     * @param {?} targetObject
     * @return {?}
     */
    Ng6NotifyPopupService.prototype.setConfig = /**
     * @param {?} configObject
     * @param {?} targetObject
     * @return {?}
     */
    function (configObject, targetObject) {
        /** @type {?} */
        var props = Object.getOwnPropertyNames(configObject);
        try {
            for (var props_1 = tslib_1.__values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {
                var prop = props_1_1.value;
                (/** @type {?} */ (targetObject))[prop] = (/** @type {?} */ (configObject))[prop];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var e_1, _a;
    };
    Ng6NotifyPopupService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] },
    ];
    /** @nocollapse */
    Ng6NotifyPopupService.ctorParameters = function () { return [
        { type: ComponentInjectService }
    ]; };
    /** @nocollapse */ Ng6NotifyPopupService.ngInjectableDef = i0.defineInjectable({ factory: function Ng6NotifyPopupService_Factory() { return new Ng6NotifyPopupService(i0.inject(i1.ComponentInjectService)); }, token: Ng6NotifyPopupService, providedIn: "root" });
    return Ng6NotifyPopupService;
}());
export { Ng6NotifyPopupService };
if (false) {
    /** @type {?} */
    Ng6NotifyPopupService.prototype.defaultConfigVar;
    /** @type {?} */
    Ng6NotifyPopupService.prototype.activeNotificationCompRef;
    /** @type {?} */
    Ng6NotifyPopupService.prototype.cleartime;
    /** @type {?} */
    Ng6NotifyPopupService.prototype.clearhide;
    /** @type {?} */
    Ng6NotifyPopupService.prototype.compInject;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmc2LW5vdGlmeS1wb3B1cC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmc2LW5vdGlmeS1wb3B1cC8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9uZzYtbm90aWZ5LXBvcHVwLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQWdCLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7OztJQVdsRSwrQkFBb0IsVUFBa0M7UUFBbEMsZUFBVSxHQUFWLFVBQVUsQ0FBd0I7Z0NBTFAsSUFBSSxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQztLQU1oSDs7Ozs7SUFFTSw2Q0FBYTs7OztjQUFDLFlBQW9CO1FBQ3ZDLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOzs7OztJQUkvQyx1Q0FBTzs7OztRQUNaLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDN0IsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDO1lBQ25DLElBQUksQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDakUsSUFBSSxDQUFDLHlCQUF5QixHQUFHLElBQUksQ0FBQztTQUN2Qzs7Ozs7OztJQUdJLG9DQUFJOzs7OztjQUFDLGdCQUF3QixFQUFFLGtCQUEyQjs7UUFDL0QsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDOztRQUNmLElBQUksTUFBTSxHQUF1QixJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3BPLEVBQUUsQ0FBQyxDQUFDLGtCQUFrQixJQUFJLFNBQVMsSUFBSSxrQkFBa0IsSUFBSSxJQUFJLENBQUM7WUFDaEUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM3QyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFJLE1BQU0sQ0FBQztZQUM1QixJQUFJLENBQUMseUJBQXlCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyx1QkFBdUIsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzFJLElBQUk7WUFDRixJQUFJLENBQUMseUJBQXlCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsdUJBQXVCLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFFN0ksSUFBSSxDQUFDLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBRXRELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztnQkFDakMsS0FBSSxDQUFDLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO2dCQUN0RCxLQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7b0JBQ2pDLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztpQkFDaEIsRUFBRSxHQUFHLENBQUMsQ0FBQTthQUNSLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3JCO1FBQ0QsSUFBSTtZQUNGLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQUMsS0FBSztnQkFDdkUsS0FBSSxDQUFDLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO2dCQUN0RCxLQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7b0JBQ2pDLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztpQkFDaEIsRUFBRSxHQUFHLENBQUMsQ0FBQTthQUNSLENBQUMsQ0FBQzs7Ozs7OztJQUdDLHlDQUFTOzs7OztjQUFDLFlBQW9CLEVBQUUsWUFBZ0M7O1FBQ3RFLElBQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLENBQUMsQ0FBQzs7WUFDdkQsR0FBRyxDQUFDLENBQWUsSUFBQSxVQUFBLGlCQUFBLEtBQUssQ0FBQSw0QkFBQTtnQkFBbkIsSUFBTSxJQUFJLGtCQUFBO2dCQUNiLG1CQUFNLFlBQVksRUFBQyxDQUFDLElBQUksQ0FBQyxHQUFHLG1CQUFNLFlBQVksRUFBQyxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3ZEOzs7Ozs7Ozs7Ozs7Z0JBM0RKLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBSlEsc0JBQXNCOzs7Z0NBSC9COztTQVFhLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudFJlZiwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQ29uZmlnIH0gZnJvbSAnLi4vbm90aWZpY2F0aW9uQ29uZmlnJztcbmltcG9ydCB7IE5nNk5vdGlmeVBvcHVwQ29tcG9uZW50IH0gZnJvbSAnLi4vbmc2LW5vdGlmeS1wb3B1cC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tcG9uZW50SW5qZWN0U2VydmljZSB9IGZyb20gJy4vY29tcG9uZW50LWluamVjdC5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmc2Tm90aWZ5UG9wdXBTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBkZWZhdWx0Q29uZmlnVmFyOiBOb3RpZmljYXRpb25Db25maWcgPSBuZXcgTm90aWZpY2F0aW9uQ29uZmlnKCdib3R0b20nLCAzMDAwLCAnZXJyb3InLCAnYm9keScsIGZhbHNlLCAnJyk7XG4gIHByaXZhdGUgYWN0aXZlTm90aWZpY2F0aW9uQ29tcFJlZjogQ29tcG9uZW50UmVmPGFueT47XG4gIHByaXZhdGUgY2xlYXJ0aW1lOiBudW1iZXI7XG4gIHByaXZhdGUgY2xlYXJoaWRlOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb21wSW5qZWN0OiBDb21wb25lbnRJbmplY3RTZXJ2aWNlKSB7XG4gIH1cblxuICBwdWJsaWMgZGVmYXVsdENvbmZpZyhjb25maWdPYmplY3Q6IE9iamVjdCk6IHZvaWQge1xuICAgIHRoaXMuc2V0Q29uZmlnKGNvbmZpZ09iamVjdCwgdGhpcy5kZWZhdWx0Q29uZmlnVmFyKTtcblxuICB9XG5cbiAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuY2xlYXJ0aW1lKTtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5jbGVhcmhpZGUpO1xuICAgIGlmICh0aGlzLmFjdGl2ZU5vdGlmaWNhdGlvbkNvbXBSZWYpIHtcbiAgICAgIHRoaXMuY29tcEluamVjdC5kZXN0cm95Q29tcG9uZW50KHRoaXMuYWN0aXZlTm90aWZpY2F0aW9uQ29tcFJlZik7XG4gICAgICB0aGlzLmFjdGl2ZU5vdGlmaWNhdGlvbkNvbXBSZWYgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzaG93KG5vdGlmaWNhdGlvblRleHQ6IHN0cmluZywgbm90aWZpY2F0aW9uQ29uZmlnPzogT2JqZWN0KTogdm9pZCB7XG4gICAgdGhpcy5kZXN0cm95KCk7XG4gICAgbGV0IGNvbmZpZzogTm90aWZpY2F0aW9uQ29uZmlnID0gbmV3IE5vdGlmaWNhdGlvbkNvbmZpZyh0aGlzLmRlZmF1bHRDb25maWdWYXIucG9zaXRpb24sIHRoaXMuZGVmYXVsdENvbmZpZ1Zhci5kdXJhdGlvbiwgdGhpcy5kZWZhdWx0Q29uZmlnVmFyLnR5cGUsIHRoaXMuZGVmYXVsdENvbmZpZ1Zhci5sb2NhdGlvbiwgdGhpcy5kZWZhdWx0Q29uZmlnVmFyLnN0aWNreSwgbm90aWZpY2F0aW9uVGV4dCk7XG4gICAgaWYgKG5vdGlmaWNhdGlvbkNvbmZpZyAhPSB1bmRlZmluZWQgJiYgbm90aWZpY2F0aW9uQ29uZmlnICE9IG51bGwpXG4gICAgICB0aGlzLnNldENvbmZpZyhub3RpZmljYXRpb25Db25maWcsIGNvbmZpZyk7XG4gICAgaWYgKGNvbmZpZy5sb2NhdGlvbiA9PSAnYm9keScpXG4gICAgICB0aGlzLmFjdGl2ZU5vdGlmaWNhdGlvbkNvbXBSZWYgPSB0aGlzLmNvbXBJbmplY3QuYXBwZW5kQ29tcG9uZW50VG9Cb2R5KE5nNk5vdGlmeVBvcHVwQ29tcG9uZW50LCBjb25maWcsIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKSk7XG4gICAgZWxzZVxuICAgICAgdGhpcy5hY3RpdmVOb3RpZmljYXRpb25Db21wUmVmID0gdGhpcy5jb21wSW5qZWN0LmFwcGVuZENvbXBvbmVudChOZzZOb3RpZnlQb3B1cENvbXBvbmVudCwgY29uZmlnLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5sb2NhdGlvbikpO1xuXG4gICAgdGhpcy5hY3RpdmVOb3RpZmljYXRpb25Db21wUmVmLmluc3RhbmNlLmZhZGUgPSAnc2hvdyc7XG5cbiAgICBpZiAoIXRoaXMuYWN0aXZlTm90aWZpY2F0aW9uQ29tcFJlZi5pbnN0YW5jZS5zdGlja3kpIHtcbiAgICAgIHRoaXMuY2xlYXJ0aW1lID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmFjdGl2ZU5vdGlmaWNhdGlvbkNvbXBSZWYuaW5zdGFuY2UuZmFkZSA9ICdoaWRlJztcbiAgICAgICAgdGhpcy5jbGVhcmhpZGUgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICAgIH0sIDcwMClcbiAgICAgIH0sIGNvbmZpZy5kdXJhdGlvbik7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgIHRoaXMuYWN0aXZlTm90aWZpY2F0aW9uQ29tcFJlZi5pbnN0YW5jZS5kZXN0cm95Q29tcG9uZW50LnN1YnNjcmliZSgodmFsdWUpID0+IHtcbiAgICAgICAgdGhpcy5hY3RpdmVOb3RpZmljYXRpb25Db21wUmVmLmluc3RhbmNlLmZhZGUgPSAnaGlkZSc7XG4gICAgICAgIHRoaXMuY2xlYXJoaWRlID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB9LCA3MDApXG4gICAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0Q29uZmlnKGNvbmZpZ09iamVjdDogT2JqZWN0LCB0YXJnZXRPYmplY3Q6IE5vdGlmaWNhdGlvbkNvbmZpZyk6IHZvaWQge1xuICAgIGNvbnN0IHByb3BzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoY29uZmlnT2JqZWN0KTtcbiAgICBmb3IgKGNvbnN0IHByb3Agb2YgcHJvcHMpIHtcbiAgICAgICg8YW55PnRhcmdldE9iamVjdClbcHJvcF0gPSAoPGFueT5jb25maWdPYmplY3QpW3Byb3BdO1xuICAgIH1cblxuICB9XG59XG4iXX0=