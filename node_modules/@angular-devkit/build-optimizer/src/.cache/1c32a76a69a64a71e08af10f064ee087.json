{"remainingRequest":"F:\\deployment-notification-cr\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!F:\\deployment-notification-cr\\node_modules\\ng5-slider\\node_modules\\rxjs\\operator\\skipWhile.js","dependencies":[{"path":"F:\\deployment-notification-cr\\node_modules\\ng5-slider\\node_modules\\rxjs\\operator\\skipWhile.js","mtime":1584689812055},{"path":"F:\\deployment-notification-cr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1584689768230},{"path":"F:\\deployment-notification-cr\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1584689753517}],"contextDependencies":[],"result":["\"use strict\";\r\nvar skipWhile_1 = require('../operators/skipWhile');\r\n/**\r\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\r\n * true, but emits all further source items as soon as the condition becomes false.\r\n *\r\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\r\n *\r\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\r\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\r\n * specified predicate becomes false.\r\n * @method skipWhile\r\n * @owner Observable\r\n */\r\nfunction skipWhile(predicate) {\r\n    return skipWhile_1.skipWhile(predicate)(this);\r\n}\r\nexports.skipWhile = skipWhile;\r\n//# sourceMappingURL=skipWhile.js.map",null]}