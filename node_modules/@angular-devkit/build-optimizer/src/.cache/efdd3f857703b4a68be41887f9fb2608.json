{"remainingRequest":"D:\\ISG-Git\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\ISG-Git\\InformXUI\\node_modules\\@okta\\okta-auth-js\\lib\\storageBuilder.js","dependencies":[{"path":"D:\\ISG-Git\\InformXUI\\node_modules\\@okta\\okta-auth-js\\lib\\storageBuilder.js","mtime":1549328294000},{"path":"D:\\ISG-Git\\InformXUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545025812410},{"path":"D:\\ISG-Git\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1545026007131}],"contextDependencies":[],"result":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nvar AuthSdkError = require('./errors/AuthSdkError');\n\n// storage must have getItem and setItem\nfunction storageBuilder(webstorage, storageName) {\n  function getStorage() {\n    var storageString = webstorage.getItem(storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + storageName);\n    }\n  }\n\n  function setStorage(storage) {\n    try {\n      var storageString = JSON.stringify(storage);\n      webstorage.setItem(storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + storageName);\n    }\n  }\n\n  function clearStorage(key) {\n    if (!key) {\n      setStorage({});\n    }\n    var storage = getStorage();\n    delete storage[key];\n    setStorage(storage);\n  }\n\n  function updateStorage(key, value) {\n    var storage = getStorage();\n    storage[key] = value;\n    setStorage(storage);\n  }\n\n  return {\n    getStorage: getStorage,\n    setStorage: setStorage,\n    clearStorage: clearStorage,\n    updateStorage: updateStorage\n  };\n}\n\nmodule.exports = storageBuilder;\n",null]}