{"remainingRequest":"D:\\isg-informx-12-8-19\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\isg-informx-12-8-19\\node_modules\\d3-geo\\src\\projection\\identity.js","dependencies":[{"path":"D:\\isg-informx-12-8-19\\node_modules\\d3-geo\\src\\projection\\identity.js","mtime":1565588412552},{"path":"D:\\isg-informx-12-8-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1565588404477},{"path":"D:\\isg-informx-12-8-19\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1565588397952}],"contextDependencies":[],"result":["import clipRectangle from \"../clip/rectangle\";\r\nimport identity from \"../identity\";\r\nimport {transformer} from \"../transform\";\r\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\r\n\r\nfunction scaleTranslate(kx, ky, tx, ty) {\r\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\r\n    point: function(x, y) {\r\n      this.stream.point(x * kx + tx, y * ky + ty);\r\n    }\r\n  });\r\n}\r\n\r\nexport default function() {\r\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\r\n      x0 = null, y0, x1, y1, // clip extent\r\n      postclip = identity,\r\n      cache,\r\n      cacheStream,\r\n      projection;\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return projection;\r\n  }\r\n\r\n  return projection = {\r\n    stream: function(stream) {\r\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\r\n    },\r\n    postclip: function(_) {\r\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\r\n    },\r\n    clipExtent: function(_) {\r\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\r\n    },\r\n    scale: function(_) {\r\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\r\n    },\r\n    translate: function(_) {\r\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\r\n    },\r\n    reflectX: function(_) {\r\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\r\n    },\r\n    reflectY: function(_) {\r\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\r\n    },\r\n    fitExtent: function(extent, object) {\r\n      return fitExtent(projection, extent, object);\r\n    },\r\n    fitSize: function(size, object) {\r\n      return fitSize(projection, size, object);\r\n    },\r\n    fitWidth: function(width, object) {\r\n      return fitWidth(projection, width, object);\r\n    },\r\n    fitHeight: function(height, object) {\r\n      return fitHeight(projection, height, object);\r\n    }\r\n  };\r\n}\r\n",null]}