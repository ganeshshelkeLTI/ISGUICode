{"remainingRequest":"D:\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\InformXUI\\node_modules\\@okta\\okta-auth-js\\lib\\util.js","dependencies":[{"path":"D:\\InformXUI\\node_modules\\@okta\\okta-auth-js\\lib\\util.js","mtime":1561962764641},{"path":"D:\\InformXUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1561962767981},{"path":"D:\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1561962756102}],"contextDependencies":[],"result":["/*!\r\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\r\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\r\n *\r\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *\r\n * See the License for the specific language governing permissions and limitations under the License.\r\n */\r\n/* eslint-env es6 */\r\nvar util = module.exports;\r\n\r\nutil.base64UrlToBase64 = function(b64u) {\r\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\r\n};\r\n\r\nutil.base64UrlToString = function(b64u) {\r\n  var b64 = util.base64UrlToBase64(b64u);\r\n  switch (b64.length % 4) {\r\n    case 0:\r\n      break;\r\n    case 2:\r\n      b64 += '==';\r\n      break;\r\n    case 3:\r\n      b64 += '=';\r\n      break;\r\n    default:\r\n      throw 'Not a valid Base64Url';\r\n  }\r\n  var utf8 = atob(b64);\r\n  try {\r\n    return decodeURIComponent(escape(utf8));\r\n  } catch (e) {\r\n    return utf8;\r\n  }\r\n};\r\n\r\nutil.stringToBuffer = function(str) {\r\n  var buffer = new Uint8Array(str.length);\r\n  for (var i = 0; i < str.length; i++) {\r\n    buffer[i] = str.charCodeAt(i);\r\n  }\r\n  return buffer;\r\n};\r\n\r\nutil.base64UrlDecode = function(str) {\r\n  return atob(util.base64UrlToBase64(str));\r\n};\r\n\r\nutil.bind = function(fn, ctx) {\r\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\r\n  return function() {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    args = additionalArgs.concat(args);\r\n    return fn.apply(ctx, args);\r\n  };\r\n};\r\n\r\nutil.isAbsoluteUrl = function(url) {\r\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\r\n};\r\n\r\nutil.isString = function(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object String]';\r\n};\r\n\r\nutil.isObject = function(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Object]';\r\n};\r\n\r\nutil.isNumber = function(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Number]';\r\n};\r\n\r\nutil.isArray = function(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Array]';\r\n};\r\n\r\nutil.isoToUTCString = function(str) {\r\n  var parts = str.match(/\\d+/g),\r\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\r\n      isoDate = new Date(isoTime);\r\n\r\n  return isoDate.toUTCString();\r\n};\r\n\r\nutil.toQueryParams = function(obj) {\r\n  var str = [];\r\n  if (obj !== null) {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key) &&\r\n          obj[key] !== undefined &&\r\n          obj[key] !== null) {\r\n        str.push(key + '=' + encodeURIComponent(obj[key]));\r\n      }\r\n    }\r\n  }\r\n  if (str.length) {\r\n    return '?' + str.join('&');\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nutil.genRandomString = function(length) {\r\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  var random = '';\r\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\r\n    random += randomCharset[Math.floor(Math.random() * cl)];\r\n  }\r\n  return random;\r\n};\r\n\r\nutil.extend = function() {\r\n  var obj1 = arguments[0];\r\n  var objArray = [].slice.call(arguments, 1);\r\n  objArray.forEach(function(obj) {\r\n    for (var prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) {\r\n        obj1[prop] = obj[prop];\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nutil.removeNils = function(obj) {\r\n  var cleaned = {};\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      var value = obj[prop];\r\n      if (value !== null && value !== undefined) {\r\n        cleaned[prop] = value;\r\n      }\r\n    }\r\n  }\r\n  return cleaned;\r\n};\r\n\r\nutil.clone = function(obj) {\r\n  if (obj) {\r\n    var str = JSON.stringify(obj);\r\n    if (str) {\r\n      return JSON.parse(str);\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\n// Analogous to _.omit\r\nutil.omit = function(obj) {\r\n  var props = Array.prototype.slice.call(arguments, 1);\r\n  var newobj = {};\r\n  for (var p in obj) {\r\n    if (obj.hasOwnProperty(p) && props.indexOf(p) == -1) {\r\n      newobj[p] = obj[p];\r\n    }\r\n  }\r\n  return util.clone(newobj);\r\n};\r\n\r\nutil.find = function(collection, searchParams) {\r\n  var c = collection.length;\r\n  while (c--) {\r\n    var item = collection[c];\r\n    var found = true;\r\n    for (var prop in searchParams) {\r\n      if (!searchParams.hasOwnProperty(prop)) {\r\n        continue;\r\n      }\r\n      if (item[prop] !== searchParams[prop]) {\r\n        found = false;\r\n        break;\r\n      }\r\n    }\r\n    if (found) {\r\n      return item;\r\n    }\r\n  }\r\n};\r\n\r\nutil.getLink = function(obj, linkName, altName) {\r\n  if (!obj || !obj._links) {\r\n    return;\r\n  }\r\n\r\n  var link = util.clone(obj._links[linkName]);\r\n\r\n  // If a link has a name and we have an altName, return if they match\r\n  if (link && link.name && altName) {\r\n    if (link.name === altName) {\r\n      return link;\r\n    }\r\n  } else {\r\n    return link;\r\n  }\r\n};\r\n\r\nutil.getNativeConsole = function() {\r\n  if (typeof window !== 'undefined') {\r\n    return window.console;\r\n  } else if (typeof console !== 'undefined') {\r\n    return console;\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nutil.getConsole = function() {\r\n  var nativeConsole = util.getNativeConsole();\r\n  if (nativeConsole && nativeConsole.log) {\r\n    return nativeConsole;\r\n  }\r\n  return {\r\n    log: function() {}\r\n  };\r\n};\r\n\r\nutil.warn = function(text) {\r\n  /* eslint-disable no-console */\r\n  util.getConsole().log('[okta-auth-sdk] WARN: ' + text);\r\n  /* eslint-enable */\r\n};\r\n\r\nutil.deprecate = function(text) {\r\n  /* eslint-disable no-console */\r\n  util.getConsole().log('[okta-auth-sdk] DEPRECATION: ' + text);\r\n  /* eslint-enable */\r\n};\r\n\r\nutil.deprecateWrap = function(text, fn) {\r\n  return function() {\r\n    util.deprecate(text);\r\n    return fn.apply(null, arguments);\r\n  };\r\n};\r\n\r\nutil.removeTrailingSlash = function(path) {\r\n  if (!path) {\r\n    return;\r\n  }\r\n  // Remove any whitespace before or after string\r\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\r\n  if (trimmed.slice(-1) === '/') {\r\n    return trimmed.slice(0, -1);\r\n  }\r\n  return trimmed;\r\n};\r\n\r\nutil.isIE11OrLess = function() {\r\n  return !!document.documentMode && document.documentMode <= 11;\r\n};\r\n",null]}