{"remainingRequest":"F:\\deployment-notification-cr\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!F:\\deployment-notification-cr\\node_modules\\d3-geo\\src\\path\\index.js","dependencies":[{"path":"F:\\deployment-notification-cr\\node_modules\\d3-geo\\src\\path\\index.js","mtime":1584689774613},{"path":"F:\\deployment-notification-cr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1584689768230},{"path":"F:\\deployment-notification-cr\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1584689753517}],"contextDependencies":[],"result":["import identity from \"../identity\";\r\nimport stream from \"../stream\";\r\nimport pathArea from \"./area\";\r\nimport pathBounds from \"./bounds\";\r\nimport pathCentroid from \"./centroid\";\r\nimport PathContext from \"./context\";\r\nimport pathMeasure from \"./measure\";\r\nimport PathString from \"./string\";\r\n\r\nexport default function(projection, context) {\r\n  var pointRadius = 4.5,\r\n      projectionStream,\r\n      contextStream;\r\n\r\n  function path(object) {\r\n    if (object) {\r\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\r\n      stream(object, projectionStream(contextStream));\r\n    }\r\n    return contextStream.result();\r\n  }\r\n\r\n  path.area = function(object) {\r\n    stream(object, projectionStream(pathArea));\r\n    return pathArea.result();\r\n  };\r\n\r\n  path.measure = function(object) {\r\n    stream(object, projectionStream(pathMeasure));\r\n    return pathMeasure.result();\r\n  };\r\n\r\n  path.bounds = function(object) {\r\n    stream(object, projectionStream(pathBounds));\r\n    return pathBounds.result();\r\n  };\r\n\r\n  path.centroid = function(object) {\r\n    stream(object, projectionStream(pathCentroid));\r\n    return pathCentroid.result();\r\n  };\r\n\r\n  path.projection = function(_) {\r\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\r\n  };\r\n\r\n  path.context = function(_) {\r\n    if (!arguments.length) return context;\r\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\r\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\r\n    return path;\r\n  };\r\n\r\n  path.pointRadius = function(_) {\r\n    if (!arguments.length) return pointRadius;\r\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\r\n    return path;\r\n  };\r\n\r\n  return path.projection(projection).context(context);\r\n}\r\n",null]}