{"remainingRequest":"D:\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\InformXUI\\node_modules\\d3-format\\src\\formatSpecifier.js","dependencies":[{"path":"D:\\InformXUI\\node_modules\\d3-format\\src\\formatSpecifier.js","mtime":1561962771513},{"path":"D:\\InformXUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1561962767981},{"path":"D:\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1561962756102}],"contextDependencies":[],"result":["// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\r\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\r\n\r\nexport default function formatSpecifier(specifier) {\r\n  return new FormatSpecifier(specifier);\r\n}\r\n\r\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\r\n\r\nfunction FormatSpecifier(specifier) {\r\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\r\n  var match;\r\n  this.fill = match[1] || \" \";\r\n  this.align = match[2] || \">\";\r\n  this.sign = match[3] || \"-\";\r\n  this.symbol = match[4] || \"\";\r\n  this.zero = !!match[5];\r\n  this.width = match[6] && +match[6];\r\n  this.comma = !!match[7];\r\n  this.precision = match[8] && +match[8].slice(1);\r\n  this.trim = !!match[9];\r\n  this.type = match[10] || \"\";\r\n}\r\n\r\nFormatSpecifier.prototype.toString = function() {\r\n  return this.fill\r\n      + this.align\r\n      + this.sign\r\n      + this.symbol\r\n      + (this.zero ? \"0\" : \"\")\r\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\r\n      + (this.comma ? \",\" : \"\")\r\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\r\n      + (this.trim ? \"~\" : \"\")\r\n      + this.type;\r\n};\r\n",null]}