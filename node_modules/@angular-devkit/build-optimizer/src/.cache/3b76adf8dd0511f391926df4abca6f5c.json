{"remainingRequest":"D:\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\InformXUI\\node_modules\\@okta\\okta-auth-js\\lib\\vendor\\polyfills.js","dependencies":[{"path":"D:\\InformXUI\\node_modules\\@okta\\okta-auth-js\\lib\\vendor\\polyfills.js","mtime":1561962764641},{"path":"D:\\InformXUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1561962767981},{"path":"D:\\InformXUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1561962756102}],"contextDependencies":[],"result":["/*!\r\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\r\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\r\n *\r\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *\r\n * See the License for the specific language governing permissions and limitations under the License.\r\n */\r\n\r\nrequire('Base64');\r\n\r\n// Production steps of ECMA-262, Edition 5, 15.4.4.14\r\n// Reference: http://es5.github.io/#x15.4.4.14\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Polyfill\r\nif (!Array.prototype.indexOf) {\r\n  Array.prototype.indexOf = function(searchElement, fromIndex) {\r\n\r\n    var k;\r\n\r\n    // 1. Let o be the result of calling ToObject passing\r\n    //    the this value as the argument.\r\n    if (this == null) {\r\n      throw new TypeError('\"this\" is null or not defined');\r\n    }\r\n\r\n    var o = Object(this);\r\n\r\n    // 2. Let lenValue be the result of calling the Get\r\n    //    internal method of o with the argument \"length\".\r\n    // 3. Let len be ToUint32(lenValue).\r\n    var len = o.length >>> 0;\r\n\r\n    // 4. If len is 0, return -1.\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n\r\n    // 5. If argument fromIndex was passed let n be\r\n    //    ToInteger(fromIndex); else let n be 0.\r\n    var n = +fromIndex || 0;\r\n\r\n    if (Math.abs(n) === Infinity) {\r\n      n = 0;\r\n    }\r\n\r\n    // 6. If n >= len, return -1.\r\n    if (n >= len) {\r\n      return -1;\r\n    }\r\n\r\n    // 7. If n >= 0, then Let k be n.\r\n    // 8. Else, n<0, Let k be len - abs(n).\r\n    //    If k is less than 0, then let k be 0.\r\n    k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\r\n    // 9. Repeat, while k < len\r\n    while (k < len) {\r\n      // a. Let Pk be ToString(k).\r\n      //   This is implicit for LHS operands of the in operator\r\n      // b. Let kPresent be the result of calling the\r\n      //    HasProperty internal method of o with argument Pk.\r\n      //   This step can be combined with c\r\n      // c. If kPresent is true, then\r\n      //    i.  Let elementK be the result of calling the Get\r\n      //        internal method of o with the argument ToString(k).\r\n      //   ii.  Let same be the result of applying the\r\n      //        Strict Equality Comparison Algorithm to\r\n      //        searchElement and elementK.\r\n      //  iii.  If same is true, return k.\r\n      if (k in o && o[k] === searchElement) {\r\n        return k;\r\n      }\r\n      k++;\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\nif (!Array.isArray) {\r\n  Array.isArray = function(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n  };\r\n}\r\n",null]}