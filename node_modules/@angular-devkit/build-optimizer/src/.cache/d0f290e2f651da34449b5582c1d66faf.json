{"remainingRequest":"D:\\ISG-InformX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\ISG-InformX\\node_modules\\d3-geo\\src\\adder.js","dependencies":[{"path":"D:\\ISG-InformX\\node_modules\\d3-geo\\src\\adder.js","mtime":1562860464807},{"path":"D:\\ISG-InformX\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562860456543},{"path":"D:\\ISG-InformX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1562860430677}],"contextDependencies":[],"result":["// Adds floating point numbers with twice the normal precision.\r\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\r\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\r\n// 305â€“363 (1997).\r\n// Code adapted from GeographicLib by Charles F. F. Karney,\r\n// http://geographiclib.sourceforge.net/\r\n\r\nexport default function() {\r\n  return new Adder;\r\n}\r\n\r\nfunction Adder() {\r\n  this.reset();\r\n}\r\n\r\nAdder.prototype = {\r\n  constructor: Adder,\r\n  reset: function() {\r\n    this.s = // rounded value\r\n    this.t = 0; // exact error\r\n  },\r\n  add: function(y) {\r\n    add(temp, y, this.t);\r\n    add(this, temp.s, this.s);\r\n    if (this.s) this.t += temp.t;\r\n    else this.s = temp.t;\r\n  },\r\n  valueOf: function() {\r\n    return this.s;\r\n  }\r\n};\r\n\r\nvar temp = new Adder;\r\n\r\nfunction add(adder, a, b) {\r\n  var x = adder.s = a + b,\r\n      bv = x - a,\r\n      av = x - bv;\r\n  adder.t = (a - av) + (b - bv);\r\n}\r\n",null]}