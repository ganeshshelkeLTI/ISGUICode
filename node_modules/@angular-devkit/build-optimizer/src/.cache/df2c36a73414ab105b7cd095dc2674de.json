{"remainingRequest":"D:\\ISG-InformX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\ISG-InformX\\node_modules\\@okta\\okta-auth-js\\lib\\storageBuilder.js","dependencies":[{"path":"D:\\ISG-InformX\\node_modules\\@okta\\okta-auth-js\\lib\\storageBuilder.js","mtime":1562860445817},{"path":"D:\\ISG-InformX\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562860456543},{"path":"D:\\ISG-InformX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1562860430677}],"contextDependencies":[],"result":["/*!\r\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\r\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\r\n *\r\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *\r\n * See the License for the specific language governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nvar AuthSdkError = require('./errors/AuthSdkError');\r\n\r\n// storage must have getItem and setItem\r\nfunction storageBuilder(webstorage, storageName) {\r\n  function getStorage() {\r\n    var storageString = webstorage.getItem(storageName);\r\n    storageString = storageString || '{}';\r\n    try {\r\n      return JSON.parse(storageString);\r\n    } catch(e) {\r\n      throw new AuthSdkError('Unable to parse storage string: ' + storageName);\r\n    }\r\n  }\r\n\r\n  function setStorage(storage) {\r\n    try {\r\n      var storageString = JSON.stringify(storage);\r\n      webstorage.setItem(storageName, storageString);\r\n    } catch(e) {\r\n      throw new AuthSdkError('Unable to set storage: ' + storageName);\r\n    }\r\n  }\r\n\r\n  function clearStorage(key) {\r\n    if (!key) {\r\n      setStorage({});\r\n    }\r\n    var storage = getStorage();\r\n    delete storage[key];\r\n    setStorage(storage);\r\n  }\r\n\r\n  function updateStorage(key, value) {\r\n    var storage = getStorage();\r\n    storage[key] = value;\r\n    setStorage(storage);\r\n  }\r\n\r\n  return {\r\n    getStorage: getStorage,\r\n    setStorage: setStorage,\r\n    clearStorage: clearStorage,\r\n    updateStorage: updateStorage\r\n  };\r\n}\r\n\r\nmodule.exports = storageBuilder;\r\n",null]}