# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli
    
    node --max_old_space_size=5048 ./node_modules/@angular/cli/bin/ng build --prod
  displayName: 'npm install and build'


# To fix memory heap issues
# Old - ng build --prod 

# New - node --max_old_space_size=5048 ./node_modules/@angular/cli/bin/ng build --prod

# Temporary stop on npm install for testing
# npm install

# Create an Octopus Build
- task: octopusdeploy.octopus-deploy-build-release-tasks.octopus-pack.OctopusPack@3
  displayName: 'Package InformX'
  inputs:
    PackageId: InformX
    PackageVersion: '$(build.buildnumber)'
    SourcePath: dist
    OutputPath: '$(build.artifactstagingdirectory)/packages'

- task: octopusdeploy.octopus-deploy-build-release-tasks.octopus-push.OctopusPush@3
  displayName: 'Push Packages to Octopus'
  inputs:
    OctoConnectedServiceName: OctopusServer
    Package: '$(build.artifactstagingdirectory)/packages/InformX.$(build.buildnumber).nupkg'